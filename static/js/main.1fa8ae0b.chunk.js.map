{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodoList","todos","map","key","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","uuid4","handleChange","deleteTodo","filter","addTodoItem","newTodo","ReactDOM","render","document","getElementById"],"mappings":"iQA+BeA,E,uKA3BD,IAAD,SAS4BC,KAAKC,MAAMC,KAApCC,EATH,EASGA,UAAWC,EATd,EAScA,GAAIC,EATlB,EASkBA,MAE3B,OAAO,wBAAIC,UAAU,aACb,2BAAQC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAM,EAAKR,MAAMS,kBAAkBN,MAErD,4BAAQO,QAAS,kBAAM,EAAKV,MAAMW,gBAAgBR,KAAlD,UAGA,0BAAMS,MAAOb,KAAKC,MAAMC,KAAKC,UAjBV,CACnBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAa0C,MACrDZ,Q,GAtBMa,IAAMC,WCkBdC,E,uKAfD,IAAD,OACL,OACI,6BACKpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAApB,GAAI,OACtB,kBAAC,EAAD,CACIqB,IAAKrB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,0B,GAV7BM,IAAMC,WCadK,EAdA,WAMX,OACI,4BAAQX,MALI,CAChBY,QAAS,SACTC,WAAY,QAIJ,wBAAIb,MAAO,CAAEc,SAAU,OAAQC,aAAc,SAA7C,2BACA,uBAAGf,MAAO,CAAEc,SAAU,SAAtB,qC,QC4BGE,E,4MAnCXC,MAAQ,CACJzB,MAAO,I,EAGXI,SAAW,SAAAsB,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKpC,MAAMqC,aAAa,EAAKR,MAAMzB,OACnC,EAAK2B,SAAS,CACV3B,MAAO,M,uDAKX,OACI,0BAAMkC,SAAUvC,KAAKoC,aAAc9B,UAAU,kBACzC,2BACIC,KAAK,OACLD,UAAU,aACVkC,YAAY,uBACZL,MAAOnC,KAAK8B,MAAMzB,MAClB6B,KAAK,QACLzB,SAAUT,KAAKS,WAEnB,2BAAOF,KAAK,SAASD,UAAU,eAAe6B,MAAM,a,GA/B5ChB,a,OCyETsB,E,4MAnEXX,MAAQ,CACJT,MAAO,CACH,CACIjB,GAAIsC,eACJrC,MAAO,YACPF,WAAW,GAEf,CACIC,GAAIsC,eACJrC,MAAO,YACPF,WAAW,GAEf,CACIC,GAAIsC,eACJrC,MAAO,YACPF,WAAW,K,EAKvBwC,aAAe,SAAAvC,GACX,EAAK4B,SAAS,CACVX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAApB,GAIxB,OAHIA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAEpBD,Q,EAKnB0C,WAAa,SAAAxC,GACT,EAAK4B,SAAS,CACVX,MAAM,YACC,EAAKS,MAAMT,MAAMwB,QAAO,SAAA3C,GACvB,OAAOA,EAAKE,KAAOA,S,EAMnC0C,YAAc,SAAAzC,GACV,IAAM0C,EAAU,CACZ3C,GAAIsC,eACJrC,MAAOA,EACPF,WAAW,GAEf,EAAK6B,SAAS,CACVX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwB0B,O,uDAKjC,OACI,yBAAKzC,UAAU,aACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWgC,aAActC,KAAK8C,cAC9B,kBAAC,EAAD,CACAzB,MAAOrB,KAAK8B,MAAMT,MAClBX,kBAAmBV,KAAK2C,aACxB/B,gBAAiBZ,KAAK4C,kB,GA9DN1B,IAAMC,W,MCClC6B,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,W","file":"static/js/main.1fa8ae0b.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoItem extends React.Component {\n\n    render() {\n\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\",\n        }\n\n        const { completed, id, title } = this.props.todo\n        \n    return <li className=\"todo-item\">\n            <input  type=\"checkbox\" \n                    checked={completed}\n                    onChange={() => this.props.handleChangeProps(id)}\n            />\n            <button onClick={() => this.props.deleteTodoProps(id)}>\n                Delete\n            </button>\n            <span style={this.props.todo.completed ? completedStyle : null}>\n                {title}\n            </span>\n            </li>\n    };\n}\n\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {this.props.todos.map(todo => (\n                    <TodoItem \n                        key={todo.id} \n                        todo={todo}\n                        handleChangeProps={this.props.handleChangeProps}\n                        deleteTodoProps={this.props.deleteTodoProps}\n                    />\n                ))}\n            </div>\n        );\n    };\n}\nexport default TodoList;","import React from 'react';\n\nconst Header = () => {\n    \nconst headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"2em\",\n}\n    return(\n        <header style={headerStyle}>\n            <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple todo application</h1>\n            <p style={{ fontSize: \"19px\" }}>Add todo/s thru the input field</p>\n        </header>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass InputTodo extends Component {\n    \n    state = {\n        title: \"\"\n    };\n    // Instead of having multiple methods to handle different input fields\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    // Save todo\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addTodoProps(this.state.title);\n        this.setState({\n            title: \"\"\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <input \n                    type=\"text\" \n                    className=\"input-text\"\n                    placeholder=\"Add new todo here...\" \n                    value={this.state.title} \n                    name=\"title\"\n                    onChange={this.onChange} \n                />\n                <input type=\"submit\" className=\"input-submit\" value=\"Add\" />\n            </form>\n        )\n    }\n}\n\nexport default InputTodo;","import React from 'react';\nimport TodoList from './TodoList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport { v4 as uuid4 } from \"uuid\"; // Generates unique idÂ´s \n\nclass TodoContainer extends React.Component {\n    \n    state = {\n        todos: [\n            {\n                id: uuid4(),\n                title: \"Default 1\",\n                completed: true,\n            },\n            {\n                id: uuid4(),\n                title: \"Default 2\",\n                completed: true,\n            },\n            {\n                id: uuid4(),\n                title: \"Default 3\",\n                completed: false,\n            },\n        ],\n    };\n    // Todo is Active / Completed\n    handleChange = id => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        });\n    };\n    // Delete todo\n    deleteTodo = id => {\n        this.setState({\n            todos: [\n                ...this.state.todos.filter(todo => {\n                    return todo.id !== id;\n                })\n            ]\n        });\n    };\n    // Add new todo\n    addTodoItem = title => {\n        const newTodo = {\n            id: uuid4(),\n            title: title,\n            completed: false,\n        };\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n            <Header />\n            <InputTodo addTodoProps={this.addTodoItem} />\n            <TodoList\n            todos={this.state.todos}\n            handleChangeProps={this.handleChange}\n            deleteTodoProps={this.deleteTodo}\n            />\n            </div>\n        );\n    }\n}\n\nexport default TodoContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import comp.-files\nimport TodoContainer from './components/TodoContainer'\n// Import css\nimport \"./App.css\"\n\nReactDOM.render(<TodoContainer />, document.getElementById('root'));\n"],"sourceRoot":""}