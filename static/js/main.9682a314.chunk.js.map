{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/layout/Header.js","components/AddTodo.js","components/TodoApp.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodoList","todos","map","key","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","fontWeight","marginBottom","AddTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoApp","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuid","v4","filter","ReactDOM","render"],"mappings":"4OAoCeA,EAjCE,SAAAC,GAEX,IAFqB,EASUA,EAAMC,KAA/BC,EATe,EASfA,UAAWC,EATI,EASJA,GAAIC,EATA,EASAA,MAQvB,OANAC,qBAAU,WACN,OAAO,WACHC,MAAM,iCAEX,IAGC,wBAAIC,UAAU,aACd,2BAAQC,KAAK,WACLC,QAASP,EACTQ,SAAU,kBAAMV,EAAMW,kBAAkBR,MAEhD,4BAAQS,QAAS,kBAAMZ,EAAMa,gBAAgBV,KAA7C,UAGA,0BAAMW,MAAOd,EAAMC,KAAKC,UAxBH,CACrBa,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAoBqC,MAChDd,KCZEe,EAfE,SAAAnB,GAEb,OACI,6BACIA,EAAMoB,MAAMC,KAAI,SAAApB,GAAI,OAChB,kBAAC,EAAD,CACIqB,IAAKrB,EAAKE,GACVF,KAAMA,EACNU,kBAAmBX,EAAMW,kBACzBE,gBAAiBb,EAAMa,uBC0B5BU,EApCA,SAAAvB,GACX,IAKMwB,EAAiBC,kBAAO,GAkB9B,OAjBAC,QAAQC,IAAIH,GAEZnB,qBAAU,WAEN,IAGIuB,EAAU,OAHNC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGG,IAFnBF,KAAKC,MAAsB,IAAhBD,KAAKE,UAEa,IAD7BF,KAAKC,MAAsB,IAAhBD,KAAKE,UACuB,IAE3CP,EAAeQ,QACfR,EAAeQ,SAAU,GAEzBC,SAASC,eAAe,QAAQC,UAAY,UAC5CF,SAASC,eAAe,QAAQpB,MAAMsB,gBAAkBR,KAE7D,CAAC5B,EAAMqC,aAGN,4BAAQvB,MAxBQ,CAChBwB,QAAS,SACTC,WAAY,SAuBR,wBAAIzB,MAAO,CAAE0B,SAAU,OAAQC,WAAY,OAAQC,aAAc,SAAjE,2BAC4B,0BAAMvC,GAAG,UAErC,uBAAGW,MAAO,CAAE0B,SAAU,SAAUvB,QAAS,QAAzC,4C,cCKG0B,EAlCC,SAAA3C,GAAU,IAAD,EACa4C,mBAAS,CACvCxC,MAAO,KAFU,mBACdyC,EADc,KACHC,EADG,KAoBzB,OACI,0BAAMC,SATe,SAAAC,GACrBA,EAAEC,iBACFjD,EAAMkD,aAAaL,EAAUzC,OAC7B0C,EAAa,CACT1C,MAAO,MAKmBG,UAAU,kBACpC,2BACAC,KAAK,OACLD,UAAU,aACV4C,YAAY,uBACZC,MAAOP,EAAUzC,MACjBiD,KAAK,QACL3C,SAvBa,SAAAsC,GACbF,EAAa,2BACND,GADK,kBAEPG,EAAEM,OAAOD,KAAOL,EAAEM,OAAOF,YAsB9B,2BAAO5C,KAAK,SAASD,UAAU,eAAe6C,MAAM,U,kCCmC7CG,EA1DC,SAAAvD,GAAU,IAAD,EACK4C,mBAAS,IADd,mBACdxB,EADc,KACPoC,EADO,OAEGZ,oBAAS,GAFZ,mBAEda,EAFc,KAERC,EAFQ,KA4CjB,OARJrD,qBAAU,WACNqB,QAAQC,IAAI,QACZgC,IACKC,IAAI,uDACJC,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,WAEzC,IAGK,yBAAKxD,UAAU,aACf,kBAAC,EAAD,CAAQ8B,WAAYoB,IACpB,kBAAC,EAAD,CAAWP,aApBH,SAAA9C,GACZ,IAAM4D,EAAU,CACZ7D,GAAI8D,IAAKC,KACT9D,MAAOA,EACPF,WAAW,GAEfsD,EAAS,GAAD,mBAAKpC,GAAL,CAAY4C,QAehB,kBAAC,EAAD,CACA5C,MAAOA,EACPT,kBA7Ca,SAAAR,GACjBqD,EACIpC,EAAMC,KAAI,SAAApB,GAIN,OAHIA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAEpBD,MAGXyD,GAASD,IAqCT5C,gBAjCW,SAAAV,GACfqD,EAAS,YACEpC,EAAM+C,QAAO,SAAAlE,GACZ,OAAOA,EAAKE,KAAOA,Y,MCvBvCiE,IAASC,OAAO,kBAAC,EAAD,MAAapC,SAASC,eAAe,W","file":"static/js/main.9682a314.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\n\nconst TodoItem = props =>  {\n      // Style for completed TODOs\n      const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#ffe8f6\",\n        opacity: 0.4,\n        textDecoration: \"line-through\",\n    };\n\n    const { completed, id, title } = props.todo;\n\n    useEffect(() => {\n        return () => {\n            alert(\"TODO, about to be deleted!\")\n        }\n    }, []);\n\n    return (\n        <li className=\"todo-item\">\n        <input  type=\"checkbox\" \n                checked={completed}\n                onChange={() => props.handleChangeProps(id)}\n        />\n        <button onClick={() => props.deleteTodoProps(id)}>\n            Delete\n        </button>\n        <span style={props.todo.completed ? completedStyle : null}>\n            {title}\n        </span>\n        </li>\n        )     \n};\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = props =>  {\n\n    return (\n        <div>\n           {props.todos.map(todo => (\n                <TodoItem \n                    key={todo.id} \n                    todo={todo}\n                    handleChangeProps={props.handleChangeProps}\n                    deleteTodoProps={props.deleteTodoProps}\n                />\n            ))}\n        </div>\n    );\n};\nexport default TodoList;","import React, { useEffect, useRef } from 'react';\n\nconst Header = props => {\n    const headerStyle = {\n        padding: \"20px 0\",\n        lineHeight: \"2rem\",\n    };\n\n    const isInitialMount = useRef(true);\n    console.log(isInitialMount);\n\n    useEffect(() => {\n        // BG for clicked in GUI.\n        let x = Math.floor(Math.random() * 256);\n        let y = Math.floor(Math.random() * 256);\n        let z = Math.floor(Math.random() * 256);\n        let bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n       \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        } else {\n            document.getElementById(\"inH1\").innerHTML = \"clicked\";\n            document.getElementById(\"inH1\").style.backgroundColor = bgColor;  \n        }\n    }, [props.headerSpan])\n\n    return (\n        <header style={headerStyle}>\n            <h1 style={{ fontSize: \"2rem\", fontWeight: \"bold\", marginBottom: \"15px\" }}>\n                Simple Todo Application <span id=\"inH1\"></span>\n            </h1>\n            <p style={{ fontSize: \"1.4rem\", opacity: \"0.5\" }}>\n                Add new todo/s thru the input field...\n            </p>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useState } from \"react\";\n\nconst AddTodo = props => {\n    const [inputText, setInputText] = useState({\n        title: \"\"\n    })\n\n    const onChange = e => {\n        setInputText({\n            ...inputText,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = e => {\n    e.preventDefault()\n    props.addTodoProps(inputText.title)\n    setInputText({\n        title: \"\",\n        })\n    }\n\nreturn (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n        <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add new TODO here...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n        />\n        <input type=\"submit\" className=\"input-submit\" value=\"Add\"/>\n    </form>\n)\n}\nexport default AddTodo;","// Local\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport Header from './layout/Header';\nimport InputTodo from './AddTodo';\n// 3- part\nimport uuid from \"uuid\";\nimport axios from 'axios';\n\nconst TodoApp = props => {\n    const [todos, setTodos] = useState([])\n    const [show, setShow] = useState(false)\n\n        // Todo is Active / Completed\n    const handleChange = id => {\n        setTodos(\n            todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n                }) \n            )\n            setShow(!show)\n    };\n\n        // Delete todo\n    const deleteTodo = id => {\n        setTodos([\n                ...todos.filter(todo => {\n                    return todo.id !== id;\n                }),\n            ])\n        };\n    \n    // Add new todo\n    const addTodo = title => {\n        const newTodo = {\n            id: uuid.v4(),\n            title: title,\n            completed: false,\n        };\n        setTodos([...todos, newTodo])\n    };\n\n    useEffect(() => {\n        console.log(\"test\")\n        axios\n            .get(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n            .then(response => setTodos(response.data))\n    // Specifying an array to stop/control hooks infinite loop\n    }, []); \n\n        return (\n            <div className=\"container\">\n            <Header headerSpan={show} />\n            <InputTodo addTodoProps={addTodo} />\n            <TodoList\n            todos={todos}\n            handleChangeProps={handleChange}\n            deleteTodoProps={deleteTodo}\n            />\n            </div>\n        );\n    \n} \n\nexport default TodoApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import comp.-files\nimport TodoApp from './components/TodoApp'\n// Import css\nimport \"./App.css\"\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n"],"sourceRoot":""}